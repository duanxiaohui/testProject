var isLogin = false;var primaryCalId;var calendarList;	//当前用户的日历列表	var scheduleList;	//当前要显示的日程列表var updateBySelf = false; //自行获取数据(function(){	var rRoute, rFormat;	$.route = function(obj, path){		obj = obj || {};		var m;		(rRoute || (rRoute = /([\d\w_]+)/g)).lastIndex = 0;		while ((m = rRoute.exec(path)) !== null) {			obj = obj[m[0]];			if (obj == undefined) {				break			}		}		return obj	};	$.format = function(){		var args = $.makeArray(arguments), str = String(args.shift() || ""), ar = [], first = args[0];		args = $.isArray(first) ? first : typeof(first) == 'object' ? args : [args];		$.each(args, function(i, o){			ar.push(str.replace(rFormat || (rFormat = /\{([\d\w\.]+)\}/g), function(m, n, v){				v = n === 'INDEX' ? i : n.indexOf(".") < 0 ? o[n] : $.route(o, n);				return v === undefined ? m : ($.isFunction(v) ? v.call(o, n) : v)			}));		});		return ar.join('');	};	var rPad;	$.padWithZero = function(str){		return str.replace((rPad || (rPad = /(^|\D)(\d)(?=$|\D)/g)), '$10$2');	};})();function formatDate(date){	return [date.getFullYear(), date.getMonth() + 1, date.getDate()].join('-').replace(/(\D)(\d)(?=\D|$)/g, '$10$2');}function Calendar(date){	this.date = date ? new Date(+date) : (G.currDate || new Date);}Calendar.prototype = {	getMonthFirstDate: function(){		var date = new Date(+this.date);		date.setDate(1);		return date;	},	getCalendarFirstDate: function(isSundayFirst){		var date = this.getMonthFirstDate(), day = date.getDay();		date.setDate(date.getDate() - (isSundayFirst ? day : day == 0 ? 6 : (day - 1)));		return date;	},	getCalendarSundayFirstDate: function(){		var date = this.getMonthFirstDate(), day = date.getDay(), ar = [0, -1, -2, -3, -4, -5, -6];		date.setDate(date.getDate() + ar[day]);		return date;	}};$.widget('meixx.webCalendar', {	options: {		onselect: $.noop,		cancelBubble: false	},	_create: function(){		var self = this, $elem = $(this.element), opt = this.options;		this.panel = $('#ul_calendar');		this.header = $("#ul_header");		this.tmplDate = '<li class="{monthClass}" date="{date}"><div>{solar}</div></li>';		this.handleClick();		this.initDatePicker();	},	_init: function(){		var self = this, $elem = $(this.element), opt = this.options;		//原代码
//		if(typeof opt.cldIDs != "undefined")
//			self.cldIDs = opt.cldIDs;
//		var now = this.today = new Date(), year = now.getFullYear(), month = now.getMonth() + 1;
//		this.initCalendar(year, month);
//		this.panel.find('li.today').click();				if(typeof opt.cldIDs != "undefined") {			self.cldIDs = opt.cldIDs;		}				if(typeof opt.calendarList != "undefined") {			calendarList = opt.calendarList;		}				if(typeof opt.scheduleList != "undefined") {//			scheduleList = opt.scheduleList;			scheduleList = JSON.parse(decodeURI(opt.scheduleList));		}				if(typeof opt.updateBySelf != "undefined") {			updateBySelf = opt.updateBySelf;		}				var now = this.today = new Date(), year = now.getFullYear(), month = now.getMonth() + 1;		this.initCalendar(year, month, "withoutLoadSchedule");		if(updateBySelf) {			this.loadScheduleData();			} else {			this.loadPassedScheduleData();		}
		this.panel.find('li.today').click();			},	initCalendarWithoutLoadSchedule : function(){		var self = this, $elem = $(this.element), opt = this.options;		var now = this.today = new Date(), year = now.getFullYear(), month = now.getMonth() + 1;		this.initCalendar(year, month, "withoutLoadSchedule");		var date = new Date();		var y = date.getFullYear();		var m = date.getMonth();		var d = date.getDate();		var dateStr = [y, m + 1, d].join("/");		var l = lunar(date);		self.showDateInfo(date, l, dateStr);			},	dayChange : function(){		var self = this, $elem = $(this.element), opt = this.options;				var date = new Date();		var y = date.getFullYear();		var m = date.getMonth();		var d = date.getDate();		var dateStr = [y, m + 1, d].join("/");		this.panel.find('li.today').removeClass("today");		this.panel.find("li[date='"+dateStr+"']").addClass("today");		var l = lunar(date);		self.showDateInfo(date, l, dateStr);		self.showScheduleInfo(dateStr);	},	initCalendar: function(year, month, type){		var self = this, $elem = $(this.element), opt = this.options;		var d = new Date(year, month - 1, 1), c = new Calendar(d);		var t = this.today, nowYear = t.getFullYear(), nowMonth = t.getMonth(), nowDate = t.getDate();		year = this.year = d.getFullYear();		month = this.month = d.getMonth() + 1;		$elem.find('div.calendar_years p').html(this.year + '年' + this.month + '月');		var headHtml;		if(self._getSundayFirst()){			this.fromDate = c.getCalendarSundayFirstDate();			headHtml = "<li>日</li><li>一</li><li>二</li><li>三</li><li>四</li><li>五</li><li>六</li>";		}else{			this.fromDate = c.getCalendarFirstDate();			headHtml = "<li>一</li><li>二</li><li>三</li><li>四</li><li>五</li><li>六</li><li>日</li>";		}				var iterator = new Date(this.fromDate);		var rowsHtml = $.map(new Array(42), function(_, i){			var y = iterator.getFullYear(), m = iterator.getMonth(), d = iterator.getDate(), w = iterator.getDay(), l = lunar(iterator);			var selector = [];			m != month - 1 && selector.push('beforafter');			d == nowDate && m == nowMonth && y == nowYear && selector.push('today');			d == 1 && m == month - 1 && (month-1 != nowMonth || year != nowYear) && selector.push('today');			iterator.setDate(iterator.getDate() + 1);			return $.format(self.tmplDate, {				monthClass: selector.join(' '),				solar: d,				date: [y, m + 1, d].join('/')			});		});		this.toDate = new Date(iterator);		this.header.html(headHtml);		this.panel.html(rowsHtml);		if(type !== "withoutLoadSchedule") {			//原代码//			this.loadScheduleData();			//			this.loadScheduleData_old(); //老的加载方法，会导致重复调用			// edited by Xiaoqi 第一次加载时获取日历id			if(typeof calendarList == "undefined") {				return;			} else {				this.loadScheduleData();			}		}	},	handleClick: function(){		var self = this, $elem = $(this.element), opt = this.options;		$('li', self.panel).live('click', function(){			self.panel.find('li.today').removeClass('today');			var $li = $(this).addClass('today'), strDate = $li.attr('date'), d = new Date(strDate), l = lunar(d);			self.showDateInfo(d, l, strDate);			self.showScheduleInfo(strDate);			opt.onselect.call(self, d, l);			if($('.today').attr('date')==formatDate(new Date()).replace(/-0/g,'/')){				$(".return_today_btn").hide();			}else{				$(".return_today_btn").show();			}			clientProtocol.runScript(3, "updateAlmanac('"+d.getTime()+"')");		});	},	initDatePicker: function(){		var self = this, $elem = $(this.element), opt = this.options;		$elem.find('div.calendar_years .prv').add($elem.find('div.calendar_years .next')).click(function(evt){			evt.preventDefault();			var $lnk = $(this), delta = $lnk.attr('delta') - 0;			self.initCalendar(self.year, self.month + delta);			this.panel.find('li.today').click();		});	},	showDateInfo: function(d, l, strDate){		var self = this, $elem = $(this.element), opt = this.options;		var tmpl = '<a href="javascrpit:;" class="login none">登录</a><a title="打开在线365日历" href="javascript:;" class="calendar_set_btn"></a><div class="set_widget">'+					'<div class="set_widget_btn"></div><div class="set_widget_box">'+					'<a href="javascript:; " class="set_widget_style" val="1">置顶</a><a href="javascript:;" class="set_widget_style" val="2">贴桌面</a><a href="javascript:;" class="set_widget_style" val="0">普通</a><a href="javascript:;" class="close_calendar">隐藏</a></div></div><div class="schedule_icon{hasSchedule}" title="今日有日程"></div><div class="calendar_data_week">星期{week}</div><div class="calendar_data_text"><div class="line"></div>{date}</div><div class="calendar_data_lunar">{lMonth}月{lDate} {festival}</div><div class="almanac">宜：出行 嫁娶 求医...</div>';		var festival = l.festival();		$('#div_today').html($.format(tmpl, {			week: l.cnDay,			date: d.getDate(),			lMonth: l.lMonth,			lDate: l.lDate,			festival: festival[0] && festival[0].desc && festival[0].desc.length < 4 && festival[0].desc || l.term || '',			hasSchedule: self.sdata && self.sdata[strDate] ? '' : ' none'		})).attr('date', formatDate(d));		var styleId = clientProtocol.getStyle(2);		if(styleId){			$(".set_widget_style[val='"+styleId+"']").addClass("on");		}						$('#div_today a.calendar_set_btn').click(function(evt){			evt.preventDefault();			evt.stopPropagation();			js365.showMainWnd();		});		$('#div_today a.close_calendar').click(function(evt){			evt.preventDefault();			evt.stopPropagation();			$(".set_widget_box").hide("fade");			js365.hideDeskWnd();		});		$("#div_today .almanac").click(function(evt){			evt.preventDefault();			evt.stopPropagation();			clientProtocol.createWnd(3, "/gui/almanac.html?timestamp="+d.getTime(), 600, 420);		});		$("#div_today .set_widget_btn").click(function(evt){			evt.preventDefault();			evt.stopPropagation();			if($(".set_widget_box").is(":visible"))				$(".set_widget_box").hide("fade");			else				$(".set_widget_box").show("fade");		});		$("#div_today .set_widget_style").click(function(evt){			evt.preventDefault();			evt.stopPropagation();			if($(this).hasClass("on")){				$(".set_widget_box").hide("fade");				return;			}			$(".set_widget_box .on").removeClass("on");			$(this).addClass("on");			var val = $(this).attr("val");			clientProtocol.setStyle(2, parseInt(val));			$(".set_widget_box").hide("fade");		});						setYiJi(d, $("#div_today .almanac"));	},	showScheduleInfo: function(strDate){		var self = this, $elem = $(this.element), opt = this.options;		if (self.sdata) {			var arHtml = [];			$.each(self.sdata[strDate] || [], function(_, o){				//{"id":158,"start_time":"2013-04-29 09:00:00","text":"每周单数工作日","duration":0,"allday_event":true,"cid":11,"repeat_type":7}				arHtml.push($.format('<li class="task ui-corner-all" sid="{id}" cid="{cid}" datetime="{start_time}" content="{text}" calendarTitle="{calendarTitle}" allday="{allday}"><div class="spheric ui-corner-all-16" style="background-color:{color}"></div><p title="{text}" class="task_text"><span class="wiegt_time">{timess}</span>{text}</p></li>', {					id: o.id,					text: html_encode(html_decode(o.text)),					cid: o.cid,					color: self.colors[o.cid],					start_time: o.start_time,					timess:o.allday_event?'全天':o.start_time.split(' ')[1].substr(0,5),					allday:o.allday_event?"yes":"no",					calendarTitle:self.calendarMap[o.cid]				}));			});						$('#ul_schedules').html(arHtml.length ? arHtml.join('') + '<li class="noschedules"><p><a href="javascript:;" onclick="addSchduleOnMain(\'' +					strDate +					'\');return false;">添加日程</a></p></li>' : isLogin ? '<li class="noschedules"><p>您今天没有日程。<br/><a href="javascript:;" onclick="addSchduleOnMain(\'' +			strDate +			'\');return false;">添加日程</a></p></li>' : '<li class="noschedules"><p>您还没有登录，<br/>请您先<a href="javascript:;" onclick="mainToLogin(); return false;">登录</a></p></li>');			var click_progress = false;			$('#ul_schedules li').click(function(evt){				if(click_progress)					return;				var $li = $(this), sid = $li.attr('sid'), cid = $li.attr('cid'), strDate = $li.attr('datetime').split('-').join('/'), dt = new Date(strDate);				var year = dt.getFullYear(), month = dt.getMonth() + 1, date = dt.getDate();				try {					var sDate = $li.attr('datetime');					var content = $li.attr("content");					var allday = $li.attr("allday");					var calendarTitle = $li.attr("calendarTitle");					if(allday == "yes"){						sDate = sDate.split(" ")[0] + " 全天";					}					var urlAry = ["/gui/schedule_detailed.html", "?date=", sDate, "&content=", encodeURIComponent(content), "&title=", encodeURIComponent(calendarTitle), "&sid=", sid];					clientProtocol.createWnd(7, urlAry.join(""), 260, 300);					clientProtocol.setStyle(7, 1);				} catch (e) {				}								click_progress = true;				setTimeout(function(){					click_progress = false;				}, 300);			});			$('#div_schedules').data('jsp').reinitialise();		}	},	// backup by Xiaoqi 原加载日程的方法	loadScheduleData_old: function(){		var self = this, $elem = $(this.element), opt = this.options;		self.sdata = {};		self.colors = {};		self.calendarMap = {};		if (typeof(js365) != "undefined" && js365.isLogin() == 'no') {			isLogin = false;			opt.cancelBubble || mainToLogin();			return;		}		$.ajax({			url: '/calendar/getCalendarListByUser.do',			type: 'post',			dataType: 'json',			success: function(data){				if (data.state == 'wrongpass') {					$('#div_today a.login').removeClass('none').off('click').on('click', function(evt){						evt.preventDefault();						evt.stopPropagation();						isLogin = false;						js365.showMainWnd();						js365.runScriptMainWnd('location.href="/account/login.do"');					});				} else {					isLogin = true;										$('#div_today a.login').addClass('none');					$.ajax({						url: '/schedule/list.do',						type: 'post',						dataType: 'json',						cache: false,						data: {							fromDate: formatDate(self.fromDate),							toDate: formatDate(self.toDate),							timeZone: -self.fromDate.getTimezoneOffset() / 60,							calendarId: $.map(data, function(o){
								self.colors[o.id] = o.color;
								self.calendarMap[o.id] = o.title
								return o.id;
							}).join(',')						},						success: function(data){							//fix pc bug workaround							function getDateFromStr(str){								var d = new Date();								try{									var ary = str.split(" ");									var month = ary[0].split("-")[1];									if(month.indexOf("0") == 0)										month = parseInt(month.substr(1));									else										month = parseInt(month);									d.setFullYear(ary[0].split("-")[0]);									d.setMonth(month - 1);									d.setDate(ary[0].split("-")[2]);																		d.setHours(ary[1].split(":")[0]);									d.setMinutes(ary[1].split(":")[1]);									d.setSeconds(ary[1].split(":")[2]);									return d;								}catch(e){									return new Date(str);								}							}							self.sdata = {};							var expand_sdata = [];							$.each(data, function(i, cal){								if(typeof self.cldIDs != "undefined" && self.cldIDs.indexOf(cal.cid) == -1)									return;								$.each(cal.schlist, function(i, o){									expand_sdata.push(o);								});															});							$.each(expand_sdata, function(i, o){								var str = o.start_time.split(' ')[0].replace(/-0?/g, '/'), date = new Date(str);								var hsl = rgbToHsl(self.colors[o.cid]), h = hsl[0], s = hsl[1], l = hsl[2];								self.panel.find('li[date="' + str + '"]').addClass('schedule');								self.panel.find('li[date="' + str + '"] div').css({									backgroundColor: hslToRgb.call(null, h, s, 0.96),									border: "1px solid " + self.colors[o.cid]								});								if (!self.sdata[str]) {									self.sdata[str] = [];								}								self.sdata[str].push(o);							});							self.panel.find('li.today').click();						}					});				}			}		});	},	// added by Xiaoqi 获取日历列表	loadCalendarData: function(){		var self = this, $elem = $(this.element), opt = this.options;		self.sdata = {};		self.colors = {};		self.calendarMap = {};		if (typeof(js365) != "undefined" && js365.isLogin() == 'no') {			isLogin = false;			opt.cancelBubble || mainToLogin();			return;		} else {			isLogin = true;		}		$.ajax({			url: '/calendar/getCalendarListByUser.do',			type: 'post',			dataType: 'json',			success: function(data){				if (data.state == 'wrongpass') {					$('#div_today a.login').removeClass('none').off('click').on('click', function(evt){						evt.preventDefault();						evt.stopPropagation();						isLogin = false;						js365.showMainWnd();						js365.runScriptMainWnd('location.href="/account/login.do"');					});				} else {					isLogin = true;										self.loadScheduleData();				}			}		});	},	// added by Xiaoqi 加载日程	loadScheduleData: function(){		var self = this, $elem = $(this.element), opt = this.options;		self.sdata = {};		self.colors = {};		self.calendarMap = {};				if (typeof(js365) != "undefined" && js365.isLogin() == 'no') {			isLogin = false;			opt.cancelBubble || mainToLogin();			return;		} else {			isLogin = true;		}							$('#div_today a.login').addClass('none');		$.ajax({			url: '/schedule/list.do',			type: 'post',			dataType: 'json',			cache: false,			data: {				fromDate: formatDate(self.fromDate),				toDate: formatDate(self.toDate),				timeZone: -self.fromDate.getTimezoneOffset() / 60,				calendarId: $.map(calendarList, function(o){								self.colors[o.id] = o.color;								self.calendarMap[o.id] = o.title								return o.id;							}).join(',')			},			success: function(data){				//fix pc bug workaround				//edited by Xiaoqi 增加“全天”日程判断，全天日程当做从0点开始				function getDateFromStr(str, allday){					var d = new Date();					try{						var ary = str.split(" ");						var month = ary[0].split("-")[1];						if(month.indexOf("0") == 0)							month = parseInt(month.substr(1));						else							month = parseInt(month);						d.setFullYear(ary[0].split("-")[0]);						d.setMonth(month - 1);						d.setDate(ary[0].split("-")[2]);												if(allday) {							d.setHours(0);							d.setMinutes(0);							d.setSeconds(0);						} else {							d.setHours(ary[1].split(":")[0]);							d.setMinutes(ary[1].split(":")[1]);							d.setSeconds(ary[1].split(":")[2]);						}						return d;					}catch(e){						return new Date(str);					}				}				self.sdata = {};				var expand_sdata = [];				$.each(data, function(i, cal){					if(typeof self.cldIDs != "undefined" && self.cldIDs.indexOf(cal.cid) == -1)						return;					$.each(cal.schlist, function(i, o){						expand_sdata.push(o);					});				});				expand_sdata.sort(function(a, b){					var a_date = getDateFromStr(a.start_time, a.allday_event);					var b_date = getDateFromStr(b.start_time, b.allday_event);					return a_date.getTime() - b_date.getTime();				});				$.each(expand_sdata, function(i, o){					var str = o.start_time.split(' ')[0].replace(/-0?/g, '/'), date = new Date(str);					var hsl = rgbToHsl(self.colors[o.cid]), h = hsl[0], s = hsl[1], l = hsl[2];					self.panel.find('li[date="' + str + '"]').addClass('schedule');					self.panel.find('li[date="' + str + '"] div').css({						backgroundColor: hslToRgb.call(null, h, s, 0.96),						border: "1px solid " + self.colors[o.cid]					});					if (!self.sdata[str]) {						self.sdata[str] = [];					}					self.sdata[str].push(o);				});								self.panel.find('li.today').click();			}		});	},	// added by Xiaoqi 加载由其他窗体推送的数据	loadPassedScheduleData: function(){		var self = this, $elem = $(this.element), opt = this.options;		self.sdata = {};		self.colors = {};		self.calendarMap = {};				if (typeof(js365) != "undefined" && js365.isLogin() == 'no') {			isLogin = false;			opt.cancelBubble || mainToLogin();			return;		} else {			isLogin = true;		}				$.map(calendarList, function(o){			self.colors[o.id] = o.color;			self.calendarMap[o.id] = o.title			return o.id;		});				self.sdata = {};		var expand_sdata = scheduleList;				function getDateFromStr(str, allday){			var d = new Date();			try{				var ary = str.split(" ");				var month = ary[0].split("-")[1];				if(month.indexOf("0") == 0)					month = parseInt(month.substr(1));				else					month = parseInt(month);				d.setFullYear(ary[0].split("-")[0]);				d.setMonth(month - 1);				d.setDate(ary[0].split("-")[2]);								if(allday) {					d.setHours(0);					d.setMinutes(0);					d.setSeconds(0);				} else {					d.setHours(ary[1].split(":")[0]);					d.setMinutes(ary[1].split(":")[1]);					d.setSeconds(ary[1].split(":")[2]);				}				return d;			}catch(e){				return new Date(str);			}		};		expand_sdata.sort(function(a, b){
			var a_date = getDateFromStr(a.start_time, a.allday_event);
			var b_date = getDateFromStr(b.start_time, b.allday_event);
			return a_date.getTime() - b_date.getTime();
		});		$.each(expand_sdata, function(i, o){			var str = o.start_time.split(' ')[0].replace(/-0?/g, '/'), date = new Date(str);			var hsl = rgbToHsl(self.colors[o.cid]), h = hsl[0], s = hsl[1], l = hsl[2];			self.panel.find('li[date="' + str + '"]').addClass('schedule');			self.panel.find('li[date="' + str + '"] div').css({				backgroundColor: hslToRgb.call(null, h, s, 0.96),				border: "1px solid " + self.colors[o.cid]			});			if (!self.sdata[str]) {				self.sdata[str] = [];			}			self.sdata[str].push(o);		});				self.panel.find('li.today').click();	},	_getSundayFirst: function(){		if($.cookie("calendar_panel_first") == "sunday"){			return true;		}else{			return false;		}	}});function mainToLogin(){	js365.showMainWnd();	js365.runScriptMainWnd('if(location.href.indexOf("/account/login.do") < 0) location.href="/account/login.do"');}function addSchduleOnMain(strDate){	var date = new Date(strDate);	clientProtocol.createWnd(6, "/gui/creator_schedule.html?timestamp=" + date.getTime(), 510, 370);	clientProtocol.setStyle(6, 1);}function resizeWins(){	if (!setWndWidth.working) {		if(shouldReloadPage){			$('#div_calendar').webCalendar();			shouldReloadPage = false;		}		var visibleWidth = document.documentElement.clientWidth, height = 170;		if (visibleWidth < 500) {			setWndWidth(visibleWidth, visibleWidth + 165);		} else {			setWndWidth(visibleWidth, 170);			if ($('#div_today').attr('date') != formatDate(new Date())) {				$('#div_calendar').webCalendar();			}		}	}}function restoreWins(){	if (!setWndWidth.working) {		var visibleWidth = document.documentElement.clientWidth, height = 170;		if(visibleWidth > 300)			setWndWidth(visibleWidth, 170);	}}function setWndWidth(from, to){	var speed = 400, frames = 20, term = speed / frames, distance = to - from, currframe = 0;	function setWidth(){		currframe += 1;		if (currframe <= frames) {			//easeInBack easeInBounce easeInCirc easeInCubic easeInElastic easeInExpo easeInQuad easeInQuart easeInQuint easeInSine			//easeInOutBack easeInOutBounce easeInOutCirc easeInOutCubic easeInOutElastic easeInOutExpo easeInOutQuad easeInOutQuart easeInOutQuint easeInOutSine			//easeOutBack easeOutBounce easeOutCirc easeOutCubic easeOutElastic easeOutExpo easeOutQuad easeOutQuart easeOutQuint easeOutSine linear swing			width = from + $.easing.easeOutCirc(currframe / frames) * distance;			js365.resizeToDeskWnd(width, 170);			setTimeout(setWidth, term);		} else {			setWndWidth.working = false;		}	}	setWidth();	setWndWidth.working = true;}$(function(){	var oriX, oriY;		try {		if(typeof js365 != "undefined"){			oriX = parseInt(js365.getposWndX(2));			oriY = parseInt(js365.getposWndY(2));		}		var sw = screen.availWidth, sh = screen.availHeight;		//oriX = sw - 530;		//oriY = 120;		if(location.href.indexOf("reload=true") == -1){			//js365.moveToDeskWnd(oriX, oriY);			js365.resizeToDeskWnd(170, 170);			//首次弹出提示			showTips();		}	} catch (e) {	}	$('body').on('selectstart', function(evt){		evt.preventDefault();	});	$('#div_schedules').jScrollPane();	$('#div_today').click(resizeWins);	var draging = false, startX, startY;	$(document).mousedown(function(evt){		var name = evt.target.nodeName;		if (evt.button == 0 && name != 'A') {			draging = true;			startX = evt.pageX;			startY = evt.pageY;			js365.desktopsetCapture();		}	}).mousemove(function(evt){		if (draging == true) {			$('#div_today').off('click', resizeWins);			var deltaX = evt.pageX - startX, deltaY = evt.pageY - startY;			oriX = Math.min(oriX + deltaX, sw - 170);			oriY = Math.min(oriY + deltaY, sh - 170)			js365.moveWnd(2, oriX, oriY);		}	}).mouseup(function(evt){		if (draging) {			setTimeout(function(){				$('#div_today').on('click', resizeWins);			}, 0);			draging = false;			js365.releaseCapture();		}	});	//返回今天点击事件	$(".return_today_btn").click(function(evt){		evt.preventDefault();		if ($('#div_today').attr('date') != formatDate(new Date())) {							$('#div_calendar').webCalendar();		}	});		$('#div_calendar').webCalendar();	//禁止右键点击	disableSelectAndRightClick();});//首次Tipfunction showTips(){	if($.cookie("first_tip") == "shown")		return;		var tip_bg = $("<div class='first_tip_bg'></div>").appendTo("body");	var tips   = $("<div class='first_tip'></div>").appendTo("body");	tips.append("<div class='first_tip_p1'>提示1:点击此处可以进入最大化视图</div>");	tips.append("<div class='first_tip_p2'>提示2:点击视图内任意区域可展开小窗口</div>");	var tip_close = $("<a class='first_tip_close' href='javascript:void(0)'></a>").appendTo(tips);	tip_close.click(function(){		tip_bg.hide();		tips.hide();		$.cookie("first_tip", "shown",{			expires: 365		});	});		}function disableSelectAndRightClick(){	document.oncontextmenu = function(e){		if(e.target.nodeName != "TEXTAREA" && e.target.nodeName != "INPUT")			window.event.returnValue = false;	};	document.ondragstart = function(){ window.event.returnValue = false;};	document.onselectstart = function(){ window.event.returnValue = false;};}//页面提供给PC客户端的接口var shouldReloadPage = false;var todayDate = new Date();//跨天的时候刷新页面function dayChange(){	try{	var currentDate = new Date();	if(todayDate.getMonth() != currentDate.getMonth()){		//跨月啦		todayDate = currentDate;		restoreWins();		$('#div_calendar').webCalendar("initCalendarWithoutLoadSchedule");				shouldReloadPage = true;	}else{		$('#div_calendar').webCalendar("dayChange");	}	}catch(e){	}	}////////////////////////////////////////////////////////////////////////////////////////////////////////////////window.HuangLi = {};function setYiJi(date, container){	var year  = date.getFullYear();	var month = date.getMonth() + 1;	var day   = date.getDate();	if(year>=2008&&year<=2020){		if(!eval("HuangLi.y" + year)){						var filename="/js/huangli/"+year+".js";			$.getScript(filename,function(){				var hl = eval('HuangLi.y'+ year+ '.d'+ (month < 10? ('0' + month): month)						+ (day < 10 ? ('0' + day) : day));				container.html("宜:" + hl.y + " 忌:"+ hl.j);				container.attr("title","宜:" + hl.y + " 忌:"+ hl.j);			});		}else{			var hl = eval('HuangLi.y'+ year+ '.d'+ (month < 10? ('0' + month): month)					+ (day < 10 ? ('0' + day) : day));			container.html("宜:" + hl.y + " 忌:"+ hl.j);			container.attr("title","宜:" + hl.y + " 忌:"+ hl.j);		}	}else{		container.html("");		container.attr("title","");	}}function html_encode(str){	var s = "";  	if (str.length == 0) return "";  	s = str.replace(/&/g, "&amp;");s = s.replace(/</g, "&lt;");  	s = s.replace(/>/g, "&gt;");  	s = s.replace(/ /g, "&nbsp;");  	s = s.replace(/\'/g, "&#39;");  	s = s.replace(/\"/g, "&quot;");  	//s = s.replace(/\n/g, "<br>");  	return s;  }function html_decode(str)  {  	var s = "";  	if (str.length == 0) return "";  	s = str.replace(/&amp;/g, "&");  	s = s.replace(/&lt;/g, "<");  	s = s.replace(/&gt;/g, ">");  	s = s.replace(/&nbsp;/g, " ");  	s = s.replace(/&#39;/g, "\'");  	s = s.replace(/&quot;/g, "\"");  	//s = s.replace(/<br>/g, "\n");  	return s;  }